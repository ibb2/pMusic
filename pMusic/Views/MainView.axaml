<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:pMusic.ViewModels"
             xmlns:local="clr-namespace:pMusic.Interface"
             xmlns:views="clr-namespace:pMusic.Views"
             xmlns:heroIcons="clr-namespace:HeroIconsAvalonia.Controls;assembly=HeroIconsAvalonia"
             xmlns:converter="clr-namespace:pMusic.Converter"
             xmlns:suki="https://github.com/kikipoulet/SukiUI"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="pMusic.Views.MainView"
             x:DataType="vm:MainViewModel">
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainViewModel />
    </Design.DataContext>
    <UserControl.Resources>
        <converter:PlayingConverter x:Key="PlaybackStateToBooleanConverter" />
        <converter:Seconds x:Key="SecondsToMinutesConverter" />
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="Border.Panel">
            <Setter Property="Background" Value="{DynamicResource SystemChromeHighColor}" />
            <!-- <Setter Property="Background" Value="{DynamicResource RegionColor}"></Setter> -->
        </Style>
        <Style Selector="StackPanel.SidePanel">
            <!-- <Setter Property="">100</Setter> -->
            <Setter Property="Height">40</Setter>
            <Setter Property="Width">40</Setter>
        </Style>
        <Style Selector="ListBoxItem">
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style Selector="ItemsControl /template/ ContentPresenter">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="ItemsControl:pointerover /template/ ContentPresenter">
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="Background"
                    Value="{DynamicResource SystemChromeHighColor}" />
        </Style>
        <!-- <Style Selector="StackPanel.SidePanel-Item:pointerover"> -->
        <!--     <Setter Property="Background" -->
        <!--             Value="{DynamicResource SystemChromeHighColor}" /> -->
        <!-- </Style> -->
        <Style Selector="StackPanel.SidePanel-Item:pointerover /template/ ContentPresenter">
            <Setter Property="Padding" Value="8" />
        </Style>
    </UserControl.Styles>
    <Grid RowDefinitions="Auto, *, 100">
        <Grid ColumnDefinitions="Auto, *, Auto" Margin="8, 8 8 2">
            <StackPanel Orientation="Horizontal">
                <Button Classes="Icon" BorderThickness="0" Command="{Binding GoBack}">
                    <heroIcons:HeroIcon Foreground="{DynamicResource SukiText}" Type="ChevronLeft" Min="True" />
                </Button>
                <Button Classes="Icon" BorderThickness="0"
                        Command="{Binding GoForward}">
                    <heroIcons:HeroIcon Foreground="{DynamicResource SukiText}" Type="ChevronRight" Min="True" />
                </Button>
            </StackPanel>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Spacing="4">
                <Button Classes="Home Flat Basic Accent Icon" Command="{Binding GoHome}">
                    <heroIcons:HeroIcon Foreground="{DynamicResource SukiText}" Type="Home" Kind="Solid"
                                        Margin="0 0 0 4" />
                </Button>
                <TextBox Padding="20 12" CornerRadius="30" VerticalAlignment="Center">Search for your musics'</TextBox>
            </StackPanel>
            <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="8">
                <Button Classes="Basic">
                    <heroIcons:HeroIcon Foreground="{DynamicResource SukiText}" Type="Bell" />
                </Button>
                <Button Classes="Icon" BorderThickness="0">
                    <Border CornerRadius="100" ClipToBounds="True">
                        <Viewbox StretchDirection="DownOnly" Stretch="UniformToFill">
                            <Image Source="{Binding ThumbnailUrl}" />
                        </Viewbox>
                    </Border>
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <!-- Or Account -->
                                <Button IsVisible="{Binding IsLoggedIn}" Command="{Binding LogoutCommand}">Log out</Button>
                                <!-- Profile -->
                                <!-- Support -->
                                <!-- Private Session -->
                                <!-- Settings -->
                                <!-- Log out -->
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" ColumnDefinitions="Auto, *, Auto, Auto">
            <!-- Sidebar -->
            <suki:SukiSideMenu IsSearchEnabled="True"
                               ItemsSource="{Binding Sidebar.Pinned}"
                               IsContentVisible="False" Margin="0">
                <suki:SukiSideMenu.Styles>
                    <Style Selector="Image.AppIcon">
                        <Setter Property="Transitions">
                            <Transitions>
                                <DoubleTransition Property="Opacity" Duration="0.1" />
                            </Transitions>
                        </Setter>
                        <Style Selector="^:pointerover">
                            <Setter Property="Opacity" Value="0.5" />
                        </Style>
                    </Style>
                </suki:SukiSideMenu.Styles>
                <suki:SukiSideMenu.ItemTemplate>
                    <DataTemplate>
                        <suki:SukiSideMenuItem Header="{Binding Title}">
                            <suki:SukiSideMenuItem.Icon>
                                <Grid>
                                    <Border CornerRadius="2" Margin="0 0 12 0" ClipToBounds="True">
                                        <Image Source="/Assets/Images/blank_playlist.png" Width="50" />
                                    </Border>
                                    <Image Source="{Binding Image}" Width="50" />
                                </Grid>
                            </suki:SukiSideMenuItem.Icon>
                        </suki:SukiSideMenuItem>
                    </DataTemplate>
                </suki:SukiSideMenu.ItemTemplate>

                <suki:SukiSideMenu.HeaderContent>
                    <!-- <Image Width="80" -->
                    <!--        Height="80" -->
                    <!--        Margin="30,10,30,30" -->
                    <!--        Classes="AppIcon" -->
                    <!--        IsVisible="{Binding $parent[suki:SukiWindow].((demo:SukiUIDemoViewModel)DataContext).TitleBarVisible}" -->
                    <!--        PointerPressed="InputElement_OnPointerPressed" -->
                    <!--        Source="Assets/OIG.N5o-removebg-preview.png" -->
                    <!--        ToolTip.Tip="Click To Toggle Top Menu." /> -->
                </suki:SukiSideMenu.HeaderContent>
            </suki:SukiSideMenu>
            <!-- Main Content -->
            <suki:GlassCard Grid.Column="1" IsAnimated="False" CornerRadius="17" Margin="4 5 0 10" Padding="0">
                <UserControl Content="{Binding CurrentView, Source={x:Static local:Navigation.Instance}}">
                    <ContentControl.DataTemplates>
                        <DataTemplate DataType="{x:Type vm:HomeViewModel}">
                            <views:HomeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:AlbumViewModel}">
                            <views:AlbumView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:ArtistViewModel}">
                            <views:ArtistView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:TrackViewModel}">
                            <views:TrackView />
                        </DataTemplate>
                    </ContentControl.DataTemplates>
                </UserControl>
            </suki:GlassCard>
            <GridSplitter ResizeDirection="Columns" Width="4" Foreground="Transparent" Background="Transparent"
                          Grid.Column="2">
            </GridSplitter>
            <suki:GlassCard Grid.Column="3" IsAnimated="False" CornerRadius="17" Margin="0 5 10 10" Padding="0"
                            IsVisible="{Binding IsSidecarOpen}" MaxWidth="250">
                <views:SidecarView />
            </suki:GlassCard>
        </Grid>
        <Grid Grid.Row="2" ColumnDefinitions="*, *, *" VerticalAlignment="Center" Margin="8 0">
            <!-- Bottom Music Player -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                <Border CornerRadius="8" ClipToBounds="True" VerticalAlignment="Center">
                    <Image Source="{Binding MusicPlayer.Image}" Width="75" ClipToBounds="True"
                           VerticalAlignment="Center" />
                </Border>
                <StackPanel VerticalAlignment="Center">
                    <TextBlock Text="{Binding MusicPlayer.Track.Title}"
                               VerticalAlignment="Center" Margin="8 4" />
                    <TextBlock Text="{Binding MusicPlayer.Artist.Title}"
                               VerticalAlignment="Center" Margin="8 4" />
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"
                            Spacing="8">
                    <Button
                        Classes="Basic Icon"
                        Command="{Binding PrevTrack}"
                        BorderThickness="0">
                        <heroIcons:HeroIcon Foreground="{DynamicResource SukiText}" Type="Backward" />
                    </Button>
                    <Grid HorizontalAlignment="Center">
                        <Button
                            Classes="Flat Icon"
                            Command="{Binding PlayPause}"
                            IsVisible="{Binding MusicPlayer.MPlaybackState, Converter={StaticResource PlaybackStateToBooleanConverter}, ConverterParameter=NotPlaying}"
                            VerticalAlignment="Center">
                            <heroIcons:HeroIcon Foreground="{DynamicResource SukiText}" Type="Play"
                                                Kind="Solid" Min="True" Margin="2 0 0 0" />
                        </Button>
                        <Button
                            Classes="Flat Icon"
                            Command="{Binding PlayPause}"
                            IsVisible="{Binding MusicPlayer.MPlaybackState, Converter={StaticResource PlaybackStateToBooleanConverter}}"
                            Padding="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <heroIcons:HeroIcon Foreground="{DynamicResource SukiText}" Type="Pause"
                                                Kind="Solid" Min="True" />
                        </Button>
                    </Grid>
                    <Button
                        Classes="Basic Icon"
                        Command="{Binding NextTrack}"
                        BorderThickness="0">
                        <heroIcons:HeroIcon Foreground="{DynamicResource SukiText}" Type="Forward" />
                    </Button>
                </StackPanel>
                <Grid ColumnDefinitions="30, *, 30" HorizontalAlignment="Stretch">
                    <TextBlock
                        Text="{Binding MusicPlayer.Position, Converter={StaticResource SecondsToMinutesConverter}}"
                        VerticalAlignment="Center" />
                    <Slider Grid.Column="1" Value="{Binding MusicPlayer.Position}"
                            Maximum="{Binding MusicPlayer.Duration}"
                            Width="350"
                            Thumb.DragCompleted="Thumb_OnDragCompleted"
                            x:Name="MySlider" VerticalAlignment="Center"
                            AttachedToVisualTree="Slider_AttachedToVisualTree" />
                    <TextBlock Grid.Column="2"
                               Text="{Binding MusicPlayer.Track.Duration, Converter={StaticResource SecondsToMinutesConverter}}"
                               VerticalAlignment="Center" />
                </Grid>

            </StackPanel>
            <StackPanel Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Classes="Basic Icon" Command="{Binding ToggleSidecarCommand}" VerticalAlignment="Center">
                    <heroIcons:HeroIcon Type="QueueList" Min="True" Foreground="{DynamicResource SukiText}"></heroIcons:HeroIcon>
                </Button>
                <Button Classes="Basic Icon" Command="{Binding MuteCommand}" VerticalAlignment="Center"
                        CommandParameter="{Binding MusicPlayer.Muted}"
                        IsVisible="{Binding MusicPlayer.MutedOpposite}">
                    <heroIcons:HeroIcon Type="SpeakerWave" Min="True" Foreground="{DynamicResource SukiText}"></heroIcons:HeroIcon>
                </Button>
                <Button Classes="Basic Icon" Command="{Binding MuteCommand}" VerticalAlignment="Center"
                        CommandParameter="{Binding MusicPlayer.Muted}"
                        IsVisible="{Binding MusicPlayer.Muted}">
                    <heroIcons:HeroIcon Type="SpeakerXMark" Min="True" Foreground="{DynamicResource SukiText}"></heroIcons:HeroIcon>
                </Button>
                <Slider Minimum="0" Maximum="1" Value="{Binding MusicPlayer.Volume}" MinWidth="100"
                        VerticalAlignment="Center" />
            </StackPanel>
        </Grid>
    </Grid>

    <!-- <TextBlock Text="{Binding Greeting}" HorizontalAlignment="Center" VerticalAlignment="Center"/> -->
</UserControl>